AWSTemplateFormatVersion: 2010-09-09
Transform: 'AWS::Serverless-2016-10-31'
Description: Create an HTTP API with a default route and Lambda proxy integration
Metadata:
  AWS::ServerlessRepo::Application:
    Name: http-api-lambda-proxy
    Description: HTTP API with a default route and Lambda proxy integration
    Author: Greg Davis
    SpdxLicenseId: MIT
    LicenseUrl: LICENSE.txt
    ReadmeUrl: README.md
    Labels: ['api gateway', 'http api', 'v2', 'proxy', 'lambda', 'function', 'nodejs']
    HomePageUrl: https://github.com/user1/my-app-project
    SemanticVersion: 0.0.1
    SourceCodeUrl: https://github.com/user1/my-app-project
Globals:
  Function:
    CodeUri: .
    Runtime: nodejs14.x
    MemorySize: 128
    Timeout: 15
Parameters:
  ApiName:
    Description: Name of Api
    Type: String
    Default: http-api-lambda-proxy
Resources:
  HttpApi:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: http-api-lambda
      Description: HTTP API with a default route and Lambda proxy integration
      ProtocolType: HTTP
      CorsConfiguration:
        AllowOrigins:
          - "*"
        AllowMethods:
          - GET
          - HEAD
          - OPTIONS
          - POST
      Target: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${LambdaFunction}/invocations
  LambdaFunctionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
  LambdaFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: !Sub '${ApiName}-function'
      Handler: get-event.handler
      Role: !GetAtt LambdaFunctionRole.Arn
  LambdaFunctionApiEventPermission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:InvokeFunction'
      Principal: apigateway.amazonaws.com
      FunctionName: !Ref LambdaFunction
      SourceArn: !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${HttpApi}/*'